{"version":3,"file":"html-dom-parser.min.js","sources":["../lib/utilities.js","../lib/constants.js","../lib/domparser.js","../lib/html-to-dom-client.js"],"sourcesContent":["var CASE_SENSITIVE_TAG_NAMES = require('./constants').CASE_SENSITIVE_TAG_NAMES;\n\nvar caseSensitiveTagNamesMap = {};\nvar tagName;\nfor (var i = 0, len = CASE_SENSITIVE_TAG_NAMES.length; i < len; i++) {\n  tagName = CASE_SENSITIVE_TAG_NAMES[i];\n  caseSensitiveTagNamesMap[tagName.toLowerCase()] = tagName;\n}\n\n/**\n * Gets case-sensitive tag name.\n *\n * @param  {String}           tagName - The lowercase tag name.\n * @return {String|undefined}\n */\nfunction getCaseSensitiveTagName(tagName) {\n  return caseSensitiveTagNamesMap[tagName];\n}\n\n/**\n * Formats DOM attributes to a hash map.\n *\n * @param  {NamedNodeMap} attributes - The list of attributes.\n * @return {Object}                  - A map of attribute name to value.\n */\nfunction formatAttributes(attributes) {\n  var result = {};\n  var attribute;\n  // `NamedNodeMap` is array-like\n  for (var i = 0, len = attributes.length; i < len; i++) {\n    attribute = attributes[i];\n    result[attribute.name] = attribute.value;\n  }\n  return result;\n}\n\n/**\n * Corrects the tag name if it is case-sensitive (SVG).\n * Otherwise, returns the lowercase tag name (HTML).\n *\n * @param  {String} tagName - The lowercase tag name.\n * @return {String}         - The formatted tag name.\n */\nfunction formatTagName(tagName) {\n  tagName = tagName.toLowerCase();\n  var caseSensitiveTagName = getCaseSensitiveTagName(tagName);\n  if (caseSensitiveTagName) {\n    return caseSensitiveTagName;\n  }\n  return tagName;\n}\n\n/**\n * Formats the browser DOM nodes to mimic the output of `htmlparser2.parseDOM()`.\n *\n * @param  {NodeList} nodes        - The DOM nodes.\n * @param  {Object}   [parentObj]  - The formatted parent node.\n * @param  {String}   [directive]  - The directive.\n * @return {Object[]}              - The formatted DOM object.\n */\nfunction formatDOM(nodes, parentObj, directive) {\n  parentObj = parentObj || null;\n\n  var result = [];\n  var node;\n  var prevNode;\n  var nodeObj;\n\n  // `NodeList` is array-like\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    node = nodes[i];\n    // reset\n    nodeObj = {\n      next: null,\n      prev: result[i - 1] || null,\n      parent: parentObj\n    };\n\n    // set the next node for the previous node (if applicable)\n    prevNode = result[i - 1];\n    if (prevNode) {\n      prevNode.next = nodeObj;\n    }\n\n    // set the node name if it's not \"#text\" or \"#comment\"\n    // e.g., \"div\"\n    if (node.nodeName[0] !== '#') {\n      nodeObj.name = formatTagName(node.nodeName);\n      // also, nodes of type \"tag\" have \"attribs\"\n      nodeObj.attribs = {}; // default\n      if (node.attributes && node.attributes.length) {\n        nodeObj.attribs = formatAttributes(node.attributes);\n      }\n    }\n\n    // set the node type\n    // e.g., \"tag\"\n    switch (node.nodeType) {\n      // 1 = element\n      case 1:\n        if (nodeObj.name === 'script' || nodeObj.name === 'style') {\n          nodeObj.type = nodeObj.name;\n        } else {\n          nodeObj.type = 'tag';\n        }\n        // recursively format the children\n        nodeObj.children = formatDOM(node.childNodes, nodeObj);\n        break;\n      // 2 = attribute\n      // 3 = text\n      case 3:\n        nodeObj.type = 'text';\n        nodeObj.data = node.nodeValue;\n        break;\n      // 8 = comment\n      case 8:\n        nodeObj.type = 'comment';\n        nodeObj.data = node.nodeValue;\n        break;\n    }\n\n    result.push(nodeObj);\n  }\n\n  if (directive) {\n    result.unshift({\n      name: directive.substring(0, directive.indexOf(' ')).toLowerCase(),\n      data: directive,\n      type: 'directive',\n      next: result[0] ? result[0] : null,\n      prev: null,\n      parent: parentObj\n    });\n\n    if (result[1]) {\n      result[1].prev = result[0];\n    }\n  }\n\n  return result;\n}\n\n/**\n * Detects IE with or without version.\n *\n * @param  {Number}  [version] - The IE version to detect.\n * @return {Boolean}           - Whether IE or the version has been detected.\n */\nfunction isIE(version) {\n  if (version) {\n    return document.documentMode === version;\n  }\n  return /(MSIE |Trident\\/|Edge\\/)/.test(navigator.userAgent);\n}\n\nmodule.exports = {\n  formatAttributes: formatAttributes,\n  formatDOM: formatDOM,\n  isIE: isIE\n};\n","/**\n * SVG elements are case-sensitive.\n *\n * @see {@link https://developer.mozilla.org/docs/Web/SVG/Element#SVG_elements_A_to_Z}\n */\nvar CASE_SENSITIVE_TAG_NAMES = [\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussainBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'linearGradient',\n  'radialGradient',\n  'textPath'\n];\n\nmodule.exports = {\n  CASE_SENSITIVE_TAG_NAMES: CASE_SENSITIVE_TAG_NAMES\n};\n","var utilities = require('./utilities');\n\n// constants\nvar HTML = 'html';\nvar HEAD = 'head';\nvar BODY = 'body';\nvar FIRST_TAG_REGEX = /<([a-zA-Z]+[0-9]?)/; // e.g., <h1>\nvar HEAD_TAG_REGEX = /<head.*>/i;\nvar BODY_TAG_REGEX = /<body.*>/i;\n// http://www.w3.org/TR/html/syntax.html#void-elements\nvar VOID_ELEMENTS_REGEX = /<(area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)(.*?)\\/?>/gi;\n\n// detect IE browser\nvar isIE9 = utilities.isIE(9);\nvar isIE = isIE9 || utilities.isIE();\n\n// falls back to `parseFromString` if `createHTMLDocument` cannot be used\nvar parseFromDocument = function () {\n  throw new Error(\n    'This browser does not support `document.implementation.createHTMLDocument`'\n  );\n};\n\nvar parseFromString = function () {\n  throw new Error(\n    'This browser does not support `DOMParser.prototype.parseFromString`'\n  );\n};\n\n/**\n * DOMParser (performance: slow).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMParser#Parsing_an_SVG_or_HTML_document\n */\nif (typeof window.DOMParser === 'function') {\n  var domParser = new window.DOMParser();\n\n  // IE9 does not support 'text/html' MIME type\n  // https://msdn.microsoft.com/en-us/library/ff975278(v=vs.85).aspx\n  var mimeType = isIE9 ? 'text/xml' : 'text/html';\n\n  /**\n   * Creates an HTML document using `DOMParser.parseFromString`.\n   *\n   * @param  {string} html      - The HTML string.\n   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).\n   * @return {HTMLDocument}\n   */\n  parseFromString = function (html, tagName) {\n    if (tagName) {\n      html = '<' + tagName + '>' + html + '</' + tagName + '>';\n    }\n\n    // because IE9 only supports MIME type 'text/xml', void elements need to be self-closed\n    if (isIE9) {\n      html = html.replace(VOID_ELEMENTS_REGEX, '<$1$2$3/>');\n    }\n\n    return domParser.parseFromString(html, mimeType);\n  };\n\n  parseFromDocument = parseFromString;\n}\n\n/**\n * DOMImplementation (performance: fair).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMImplementation/createHTMLDocument\n */\nif (document.implementation) {\n  // title parameter is required in IE\n  // https://msdn.microsoft.com/en-us/library/ff975457(v=vs.85).aspx\n  var doc = document.implementation.createHTMLDocument(\n    isIE ? 'html-dom-parser' : undefined\n  );\n\n  /**\n   * Use HTML document created by `document.implementation.createHTMLDocument`.\n   *\n   * @param  {string} html      - The HTML string.\n   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).\n   * @return {HTMLDocument}\n   */\n  parseFromDocument = function (html, tagName) {\n    if (tagName) {\n      doc.documentElement.getElementsByTagName(tagName)[0].innerHTML = html;\n      return doc;\n    }\n\n    try {\n      doc.documentElement.innerHTML = html;\n      return doc;\n      // fallback when certain elements in `documentElement` are read-only (IE9)\n    } catch (err) {\n      if (parseFromString) {\n        return parseFromString(html);\n      }\n    }\n  };\n}\n\n/**\n * Template (performance: fast).\n *\n * @see https://developer.mozilla.org/docs/Web/HTML/Element/template\n */\nvar template = document.createElement('template');\nvar parseFromTemplate;\n\nif (template.content) {\n  /**\n   * Uses a template element (content fragment) to parse HTML.\n   *\n   * @param  {string} html - The HTML string.\n   * @return {NodeList}\n   */\n  parseFromTemplate = function (html) {\n    template.innerHTML = html;\n    return template.content.childNodes;\n  };\n}\n\n/**\n * Parses HTML string to DOM nodes.\n *\n * @param  {string} html - The HTML string.\n * @return {NodeList|Array}\n */\nfunction domparser(html) {\n  var firstTagName;\n  var match = html.match(FIRST_TAG_REGEX);\n\n  if (match && match[1]) {\n    firstTagName = match[1].toLowerCase();\n  }\n\n  var doc;\n  var element;\n  var elements;\n\n  switch (firstTagName) {\n    case HTML:\n      doc = parseFromString(html);\n\n      // the created document may come with filler head/body elements,\n      // so make sure to remove them if they don't actually exist\n      if (!HEAD_TAG_REGEX.test(html)) {\n        element = doc.getElementsByTagName(HEAD)[0];\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n      }\n\n      if (!BODY_TAG_REGEX.test(html)) {\n        element = doc.getElementsByTagName(BODY)[0];\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n      }\n\n      return doc.getElementsByTagName(HTML);\n\n    case HEAD:\n    case BODY:\n      elements = parseFromDocument(html).getElementsByTagName(firstTagName);\n\n      // if there's a sibling element, then return both elements\n      if (BODY_TAG_REGEX.test(html) && HEAD_TAG_REGEX.test(html)) {\n        return elements[0].parentNode.childNodes;\n      }\n      return elements;\n\n    // low-level tag or text\n    default:\n      if (parseFromTemplate) {\n        return parseFromTemplate(html);\n      }\n\n      return parseFromDocument(html, BODY).getElementsByTagName(BODY)[0]\n        .childNodes;\n  }\n}\n\nmodule.exports = domparser;\n","var domparser = require('./domparser');\nvar utilities = require('./utilities');\n\nvar formatDOM = utilities.formatDOM;\nvar isIE9 = utilities.isIE(9);\n\nvar DIRECTIVE_REGEX = /<(![a-zA-Z\\s]+)>/; // e.g., <!doctype html>\n\n/**\n * Parses HTML and reformats DOM nodes output.\n *\n * @param  {String} html - The HTML string.\n * @return {Array}       - The formatted DOM nodes.\n */\nfunction parseDOM(html) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!html) {\n    return [];\n  }\n\n  // match directive\n  var match = html.match(DIRECTIVE_REGEX);\n  var directive;\n\n  if (match && match[1]) {\n    directive = match[1];\n\n    // remove directive in IE9 because DOMParser uses\n    // MIME type 'text/xml' instead of 'text/html'\n    if (isIE9) {\n      html = html.replace(match[0], '');\n    }\n  }\n\n  return formatDOM(domparser(html), null, directive);\n}\n\nmodule.exports = parseDOM;\n"],"names":["tagName","CASE_SENSITIVE_TAG_NAMES","caseSensitiveTagNamesMap","i","len","length","toLowerCase","formatAttributes","attributes","attribute","result","name","value","formatTagName","caseSensitiveTagName","domParser","mimeType","doc","formatDOM","nodes","parentObj","directive","node","prevNode","nodeObj","next","prev","parent","nodeName","attribs","nodeType","type","children","childNodes","data","nodeValue","push","unshift","substring","indexOf","isIE","version","document","documentMode","test","navigator","userAgent","HTML","HEAD","BODY","FIRST_TAG_REGEX","HEAD_TAG_REGEX","BODY_TAG_REGEX","VOID_ELEMENTS_REGEX","isIE9","utilities","parseFromDocument","Error","parseFromString","window","DOMParser","html","replace","implementation","createHTMLDocument","undefined","documentElement","getElementsByTagName","innerHTML","err","parseFromTemplate","template","createElement","content","firstTagName","element","elements","match","parentNode","removeChild","DIRECTIVE_REGEX","TypeError","domparser"],"mappings":"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"}